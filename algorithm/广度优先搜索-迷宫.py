from collections import deque

dirs = [(0, -1), (1, 0), (0, 1), (-1, 0)]

# maze = [
#     [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
#     [1, 0, 0, 1, 0, 0, 0, 1, 0, 1],
#     [1, 0, 0, 1, 0, 0, 0, 1, 0, 1],
#     [1, 0, 0, 0, 0, 1, 1, 0, 0, 1],
#     [1, 0, 1, 1, 1, 0, 0, 0, 0, 1],
#     [1, 0, 0, 0, 1, 0, 0, 0, 0, 1],
#     [1, 0, 1, 0, 0, 0, 1, 0, 0, 1],
#     [1, 0, 1, 1, 1, 0, 1, 1, 0, 1],
#     [1, 1, 0, 0, 0, 0, 0, 0, 0, 1],
#     [1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
# ]
maze = [
    [1, 1, 1, 1, 1, 1],
    [1, 0, 1, 1, 0, 1],
    [1, 0, 0, 1, 0, 1],
    [1, 1, 0, 0, 0, 1],
    [1, 0, 1, 1, 0, 1],
    [1, 1, 1, 1, 1, 1]
]

qu = deque()


def bfs(x1, y1, x2, y2):
    qu.append((x1, y1, 0))
    maze[x1][y1] = 2
    while len(qu) > 0:
        cur = qu.popleft()
        if cur[0] == x2 and cur[1] == y2:
            print("找到了")
            break
        for i in range(len(dirs)):
            x = cur[0] + dirs[i][0]
            y = cur[1] + dirs[i][1]
            if maze[x][y] == 0:
                qu.append((x, y, cur[2] + 1))
                maze[x][y] = 2

    else:
        print("没找到")


if __name__ == "__main__":
    bfs(1, 1, 4, 4)
